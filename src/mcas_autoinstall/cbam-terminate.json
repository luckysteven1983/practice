{
	"info": {
		"name": "cbam",
		"_postman_id": "d41c39b8-df5c-5f2a-3091-d46a664be36d",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "getAccessToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// example using pm.response.to.have",
							"//pm.test(\"response is ok\", function () {",
							"//    pm.response.to.have.status(200);",
							"//});",
							"//console.log(pm.response);",
							"var data = JSON.parse(responseBody);",
							"tests[\"expires_in\"] = data.expires_in === 300;",
							"",
							"//console.log(data.access_token);",
							"pm.environment.set(\"accessToken\",data.access_token);",
							"//console.log(pm.environment.get(\"accessToken\"));",
							"",
							"///pm.globals.set(\"accessToken\",data.access_token);",
							"//console.log(pm.globals.get(\"accessToken\"));",
							"//console.log(globals[\"accessToken\"]);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{clientID}}",
							"description": "",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{clientSecret}}",
							"description": "",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"description": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{cbamIPenv}}/auth/realms/cbam/protocol/openid-connect/token",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"auth",
						"realms",
						"cbam",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "queryVNF",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//request.headers[\"Authorization\"]==\"bearer\"+pm.globals.get(\"accessToken\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"var data = JSON.parse(responseBody);",
							"pm.environment.set(\"VNF_INSTANCE_ID\",(data.references)[0]);",
							"console.log(pm.environment.get(\"VNF_INSTANCE_ID\"));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{accessToken}}"
					}
				],
				"body": {},
				"url": {
					"raw": "https://{{cbamIPenv}}/api/catalog/adapter/vnfpackages/{{vnfPKGname}}",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"api",
						"catalog",
						"adapter",
						"vnfpackages",
						"{{vnfPKGname}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "terminateVNF",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a8b3976-dfc6-4b34-bd07-31630ab840dc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"terminate VNF started\", function () {",
							"    pm.response.to.have.status(202);",
							"})",
							"var data = JSON.parse(responseBody);",
							"pm.environment.set(\"operationID\",data.id);",
							"setTimeout(function(){}, 300000);",
							"pm.test(\"Waiting for 300 seconds for termination result\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"terminationType\": \"GRACEFUL\"\n}"
				},
				"url": {
					"raw": "https://{{cbamIPenv}}/vnfm/lcm/v3/vnfs/{{VNF_INSTANCE_ID}}/terminate",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"vnfm",
						"lcm",
						"v3",
						"vnfs",
						"{{VNF_INSTANCE_ID}}",
						"terminate"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "getAccessToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// example using pm.response.to.have",
							"//pm.test(\"response is ok\", function () {",
							"//    pm.response.to.have.status(200);",
							"//});",
							"//console.log(pm.response);",
							"var data = JSON.parse(responseBody);",
							"tests[\"expires_in\"] = data.expires_in === 300;",
							"",
							"//console.log(data.access_token);",
							"pm.environment.set(\"accessToken\",data.access_token);",
							"//console.log(pm.environment.get(\"accessToken\"));",
							"",
							"///pm.globals.set(\"accessToken\",data.access_token);",
							"//console.log(pm.globals.get(\"accessToken\"));",
							"//console.log(globals[\"accessToken\"]);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{clientID}}",
							"description": "",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{clientSecret}}",
							"description": "",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"description": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{cbamIPenv}}/auth/realms/cbam/protocol/openid-connect/token",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"auth",
						"realms",
						"cbam",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "getOperationStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79c2d106-0bab-4ff4-a8f9-89d2921d53f2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"check operation status is FINISHED\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"FINISHED\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{accessToken}}"
					}
				],
				"body": {},
				"url": {
					"raw": "https://{{cbamIPenv}}/vnfm/lcm/v3/operation_executions/{{operationID}}",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"vnfm",
						"lcm",
						"v3",
						"operation_executions",
						"{{operationID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "deleteVNF",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb1a464e-4897-44b7-92ab-b0c0d5171353",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"vnf deleted\", function () {",
							"    pm.response.to.have.status(204);",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{accessToken}}"
					}
				],
				"body": {},
				"url": {
					"raw": "https://{{cbamIPenv}}/vnfm/lcm/v3/vnfs/{{VNF_INSTANCE_ID}}",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"vnfm",
						"lcm",
						"v3",
						"vnfs",
						"{{VNF_INSTANCE_ID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "deletevnfpkg",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb1a464e-4897-44b7-92ab-b0c0d5171353",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"vnf pkg deleted\", function () {",
							"    pm.response.to.have.status(204);",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Authorization",
						"value": "bearer {{accessToken}}"
					}
				],
				"body": {},
				"url": {
					"raw": "https://{{cbamIPenv}}/api/catalog/adapter/vnfpackages/{{vnfPKGname}}",
					"protocol": "https",
					"host": [
						"{{cbamIPenv}}"
					],
					"path": [
						"api",
						"catalog",
						"adapter",
						"vnfpackages",
						"{{vnfPKGname}}"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}